@model SPACEExploits.ViewModel.SPACE.PlanetVM

@{
    ViewBag.Title = "Add Planet";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AddPlanet</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "Kindly fill the required values", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.PlanetName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PlanetName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PlanetName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GALAXY, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GALAXY, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GALAXY, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MoonNumbers, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MoonNumbers, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MoonNumbers, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HasLife, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.HasLife)
                @Html.ValidationMessageFor(model => model.HasLife, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HasWater, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.HasWater)
                @Html.ValidationMessageFor(model => model.HasWater, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Radius, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Radius, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Radius, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Temperature, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Temperature, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Temperature, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HasRing, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.HasRing)
                @Html.ValidationMessageFor(model => model.HasRing, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ImagePlanetFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { Id="ImagePlanetFile"} })
            @Html.ValidationMessageFor(model => model.ImagePlanetFile, "", new { @class = "text-danger" })
        </div>
    </div>
    <input type="file" name="ImageFile" onchange="AssignFilePath(this.value)" required />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function AssignFilePath(e) {
        $("#ImagePlanetFile").val(e);
        Console.log(e);
    }
</script>
