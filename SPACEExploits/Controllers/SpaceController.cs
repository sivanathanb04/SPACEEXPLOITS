using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;
using SPACEExploits.Models;
using SPACEExploits.ViewModel.SPACE;
using System.Drawing;
using System.IO;

namespace SPACEExploits.Controllers
{
    public class SpaceController : Controller
    {

        private readonly SPACEEntities sPACEEntities;
        public SpaceController() : this(new SPACEEntities())
        {

        }
        public SpaceController(SPACEEntities sPACE)
        {
            sPACEEntities = sPACE;
        }

        [HttpPost]
        public ActionResult AddPlanet(PlanetVM planetVM)
        {
            var plan = new Planet();
            plan.PlanetName = planetVM.PlanetName;
            plan.GALAXY = planetVM.GALAXY;
            plan.HasLife = planetVM.HasLife;
            plan.HasWater = planetVM.HasWater;
            plan.HasRing = planetVM.HasRing;
            plan.MoonNumbers = planetVM.MoonNumbers;
            plan.Radius = planetVM.Radius;
            plan.Temperature = planetVM.Temperature;
            if (string.IsNullOrEmpty(planetVM.ImagePath))
            {
                plan.PlanetImage = null;
            }
            else
            {

            }
            sPACEEntities.Planets.Add(plan);
            sPACEEntities.SaveChanges();
            return RedirectToAction("Index");
        }


        public ActionResult AddPlanet()
        {
            return View(new PlanetVM());
        }

        public ActionResult ShowPlanet(int PlanetId)
        {
            var plan = sPACEEntities.usp_FetchPlanet(-1).Where(x => x.PlanetId == PlanetId).FirstOrDefault();
            ViewModel.SPACE.PlanetVM planetVM = new ViewModel.SPACE.PlanetVM();
            planetVM.Planetid = plan.PlanetId;
            planetVM.PlanetName = plan.PlanetName;
            planetVM.GALAXY = plan.GALAXY;
            planetVM.HasLife = plan.HasLife;
            planetVM.HasWater = plan.HasWater;
            planetVM.HasRing = plan.HasRing;
            planetVM.MoonNumbers = plan.MoonNumbers;
            planetVM.Radius = plan.Radius;
            planetVM.Temperature = plan.Temperature;
            planetVM.PlanetImage = plan.PlanetImage;

            return View(planetVM);
        }

        // GET: Space
        public ActionResult Index()
        {
            var planet = sPACEEntities.usp_FetchPlanet(-1);
            List<ViewModel.SPACE.PlanetVM> planetList = new List<ViewModel.SPACE.PlanetVM>();
            foreach (var plan in planet)
            {
                ViewModel.SPACE.PlanetVM planetVM = new ViewModel.SPACE.PlanetVM();
                planetVM.Planetid = plan.PlanetId;
                planetVM.PlanetName = plan.PlanetName;
                planetVM.GALAXY = plan.GALAXY;
                planetVM.HasLife = plan.HasLife;
                planetVM.HasWater = plan.HasWater;
                planetVM.HasRing = plan.HasRing;
                planetVM.MoonNumbers = plan.MoonNumbers;
                planetVM.Radius = plan.Radius;
                planetVM.Temperature = plan.Temperature;
                planetVM.PlanetImage = plan.PlanetImage;
                planetList.Add(planetVM);
            }
            return View(planetList);
        }

        public ActionResult PlanetImage(int planetId)
        {
            var planet = sPACEEntities.Planets.First(x => x.Planetid == planetId);

            return File(planet.PlanetImage, "image/jpg");
        }
        public Image BinaryToImage(byte[] binaryData)
        {
            MemoryStream ms = new MemoryStream(binaryData);
            Image img = Image.FromStream(ms);

            return img;
        }

        public ActionResult DeletePlanet(int planetId)
        {
            var planet = sPACEEntities.Planets.First(x => x.Planetid == planetId);
            sPACEEntities.Planets.Remove(planet);
            sPACEEntities.SaveChanges();
            return RedirectToAction("Index");
        }

    }
}